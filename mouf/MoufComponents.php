<?php
/**
 * This is a file automatically generated by the Mouf framework. Do not modify it, as it could be overwritten.
 */
use Mouf\MoufManager;
use Interop\Container\ContainerInterface;
MoufManager::initMoufManager();
$moufManager = MoufManager::getMoufManager();

$moufManager->getConfigManager()->setConstantsDefinitionArray(array (
  'ELASTICSEARCH_HOST' => 
  array (
    'defaultValue' => 'localhost',
    'type' => 'string',
    'comment' => 'The host name for the Elastic Search server',
    'fetchFromEnv' => true,
  ),
  'ELASTICSEARCH_PORT' => 
  array (
    'defaultValue' => '9200',
    'type' => 'string',
    'comment' => 'The default port to connect to Elastic Search server',
    'fetchFromEnv' => true,
  ),
  'SECRET' => 
  array (
    'defaultValue' => 'HLxRssObAZpJdFYfHJpT',
    'type' => 'string',
    'comment' => 'A random string. It should be different for any application deployed.',
    'fetchFromEnv' => true,
  ),
  'DOWNLOAD_DIR' => 
  array (
    'defaultValue' => 'downloads',
    'type' => 'string',
    'comment' => 'The download directory',
    'fetchFromEnv' => true,
  ),
  'MONGODB_CONNECTIONSTRING' => 
  array (
    'defaultValue' => 'mongodb://localhost:27017',
    'type' => 'string',
    'comment' => 'Connection string to MongoDB',
    'fetchFromEnv' => true,
  ),
  'GOOGLE_ANALYTICS_KEY' => 
  array (
    'defaultValue' => '',
    'type' => 'string',
    'comment' => 'Your Google Analytics key. Leave empty if you want to disable Google Analytics tracking. Don\'t have a key for your website? Get one here: http://www.google.com/analytics/',
    'fetchFromEnv' => true,
  ),
  'GOOGLE_ANALYTICS_DOMAIN_NAME' => 
  array (
    'defaultValue' => '',
    'type' => 'string',
    'comment' => 'The base domain name to track (if you are tracking sub-domains). In the form: \'.example.com\'. Keep this empty if you don\'t track subdomains.',
    'fetchFromEnv' => true,
  ),
  'DEBUG' => 
  array (
    'defaultValue' => true,
    'type' => 'bool',
    'comment' => 'Set to true to enable debug/development mode.',
    'fetchFromEnv' => true,
  ),
));

$moufManager->setAllVariables(array (
  'splashDefaultSourceDirectory' => 'src/',
  'splashDefaultControllersNamespace' => 'Mouf\\Packanalyst\\Controllers\\',
  'splashDefaultViewsDirectory' => 'views/',
));

$moufManager->addComponentInstances(array (
  '__anonymous__3f09_123574_1415963578543' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\Menu\\MenuItem',
    'external' => false,
    'weak' => true,
    'anonymous' => true,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'About',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'if (trim($_SERVER[\'REQUEST_URI\'], \'/\') == trim(ROOT_URL, \'/\')) {
    return "#about";
} else {
    return ROOT_URL."#about";
}',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterProperties' => 
    array (
      'setActivateBasedOnUrl' => 
      array (
        'value' => false,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  '__anonymous__3f09_325259_1415963587939' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\Menu\\MenuItem',
    'external' => false,
    'weak' => true,
    'anonymous' => true,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'Team',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'if (trim($_SERVER[\'REQUEST_URI\'], \'/\') == trim(ROOT_URL, \'/\')) {
    return "#team";
} else {
    return ROOT_URL."#team";
}',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterProperties' => 
    array (
      'setActivateBasedOnUrl' => 
      array (
        'value' => false,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  '__anonymous__3f09_447968_1415963567295' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\Menu\\MenuItem',
    'external' => false,
    'weak' => true,
    'anonymous' => true,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'Feedback',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'if (trim($_SERVER[\'REQUEST_URI\'], \'/\') == trim(ROOT_URL, \'/\')) {
    return "#feedback";
} else {
    return ROOT_URL."#feedback";
}',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterProperties' => 
    array (
      'setActivateBasedOnUrl' => 
      array (
        'value' => false,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  '__anonymous__3f09_770655_1415899075814' => 
  array (
    'class' => 'Mouf\\Html\\Template\\Menus\\BootstrapMenu',
    'external' => false,
    'weak' => true,
    'anonymous' => true,
    'fieldProperties' => 
    array (
      'pullRight' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'navbar' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => '__anonymous__3f09_867472_1415899120049',
          1 => '__anonymous__3f09_447968_1415963567295',
          2 => '__anonymous__3f09_123574_1415963578543',
          3 => '__anonymous__3f09_796349_1416051015274',
          4 => '__anonymous__3f09_325259_1415963587939',
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  '__anonymous__3f09_796349_1416051015274' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\Menu\\MenuItem',
    'external' => false,
    'weak' => true,
    'anonymous' => true,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'API',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'if (trim($_SERVER[\'REQUEST_URI\'], \'/\') == trim(ROOT_URL, \'/\')) {
    return "#api";
} else {
    return ROOT_URL."#api";
}',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterProperties' => 
    array (
      'setActivateBasedOnUrl' => 
      array (
        'value' => false,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  '__anonymous__3f09_867472_1415899120049' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\Menu\\MenuItem',
    'external' => false,
    'weak' => true,
    'anonymous' => true,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'Search',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'if (trim($_SERVER[\'REQUEST_URI\'], \'/\') == trim(ROOT_URL, \'/\')) {
    return "#search";
} else {
    return ROOT_URL."#search";
}',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterProperties' => 
    array (
      'setActivateBasedOnUrl' => 
      array (
        'value' => false,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'annotationReader' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'Doctrine\\Common\\Annotations\\CachedReader',
    'external' => false,
    'code' => '// Using composer autoloader
$loader = require ROOT_PATH . \'vendor/autoload.php\';
Doctrine\\Common\\Annotations\\AnnotationRegistry::registerLoader(array($loader, \'loadClass\'));

// Creating a new AnnotationReader
$reader = new Doctrine\\Common\\Annotations\\AnnotationReader();
return new Doctrine\\Common\\Annotations\\CachedReader($reader, new Doctrine\\Common\\Cache\\ArrayCache());',
  ),
  'apcCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\ApcCache',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'defaultTimeToLive' => 
      array (
        'value' => 3600,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'prefix' => 
      array (
        'value' => 'SECRET',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
    'fieldBinds' => 
    array (
      'fallback' => 'fileCacheService',
    ),
  ),
  'block.content' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'block.footer' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
    ),
    'fieldBinds' => 
    array (
    ),
  ),
  'block.header' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
    ),
    'fieldBinds' => 
    array (
      'children' => 
      array (
        0 => 'bootstrapNavBar',
      ),
    ),
  ),
  'block.left' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'block.right' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'bootstrapNavBar' => 
  array (
    'class' => 'Mouf\\Html\\Template\\Menus\\BootstrapNavBar',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'fixed' => 
      array (
        'value' => 'top',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'title' => 
      array (
        'value' => 'Packanalyst <small>(beta)</small>',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'logo',
          1 => 'searchBlock',
          2 => '__anonymous__3f09_770655_1415899075814',
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'bootstrapRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.template.bootstrap/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'template',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'bootstrapTemplate' => 
  array (
    'class' => 'Mouf\\Html\\Template\\BootstrapTemplate',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setContent' => 'block.content',
      'setLeft' => 'block.left',
      'setRight' => 'block.right',
      'setHeader' => 'block.header',
      'setFooter' => 'block.footer',
      'setWebLibraryManager' => 'defaultWebLibraryManager',
      'setTemplateRenderer' => 'bootstrapRenderer',
      'setDefaultRenderer' => 'defaultRenderer',
    ),
    'setterProperties' => 
    array (
    ),
    'fieldProperties' => 
    array (
      'favIconUrl' => 
      array (
        'value' => 'src/views/css/images/favicon.ico',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'bower.typeahead.js' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'vendor/bower_components/typeahead.js/dist/typeahead.bundle.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'classAnalyzerController' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Controllers\\ClassAnalyzerController',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'psr.errorLogLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'bootstrapTemplate',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'block.content',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'twigEnvironment',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      4 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      5 => 
      array (
        'value' => 'packageDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'classesDetector' => 
  array (
    'class' => 'Mouf\\Packanalyst\\ClassesDetector',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'colorLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'colorLogger' => 
  array (
    'class' => 'GAubry\\Logger\\ColoredIndentedLogger',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'return array(
    \'colors\' => array(
        \'debug\' => "\\033[0;35m",
        \'error\' => "\\033[1;31m",
        \'section\' => "\\033[1;37m",
        \'subsection\' => "\\033[1;33m",
        \'ok\' => "\\033[1;32m"
    )
);',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'compiledAssets' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'assets/js/scripts.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'assets/css/bootstrap.css',
          1 => 'assets/css/messages.css',
          2 => 'assets/css/styles.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'component.bootstrap' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'vendor/components/bootstrap/js/bootstrap.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'vendor/components/bootstrap/css/bootstrap.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'component.jquery' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'vendor/components/jquery/jquery.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'customRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'custom',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'defaultDoctrineCache' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'Doctrine\\Common\\Cache\\ArrayCache',
    'external' => false,
    'code' => '// If DEBUG mode is on, let\'s just use an ArrayCache.
if (DEBUG) {
	$driver = new \\Doctrine\\Common\\Cache\\ArrayCache();
} else {
	// If APC is available, let\'s use APC
	if (extension_loaded("apc")) {
		$driver = new \\Doctrine\\Common\\Cache\\ApcCache();
	} else {
		$driver = new \\Doctrine\\Common\\Cache\\FileCache(sys_get_temp_dir().\'/doctrinecache\');
	}
}
$driver->setNamespace(SECRET);
return $driver;
',
  ),
  'defaultLanguageDetection' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Language\\BrowserLanguageDetection',
    'external' => false,
    'weak' => false,
  ),
  'defaultRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\AutoChainRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'defaultTranslationService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'defaultLanguageDetection',
    ),
  ),
  'defaultWebLibraryManager' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibraryManager',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setWebLibraries' => 
      array (
        0 => 'rootUrlInlineWebLibrary',
        1 => 'component.jquery',
        2 => 'component.bootstrap',
        3 => 'bower.typeahead.js',
        4 => 'stylesWebLibrary',
        5 => 'googleAnalyticsWebLibrary',
        6 => 'messageServiceLibrary',
      ),
    ),
    'setterProperties' => 
    array (
    ),
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'defaultRenderer',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'doctrineMoufCache' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Doctrine\\Cache\\DoctrineCacheAdapter',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'defaultDoctrineCache',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'downloadLock' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Lock',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'packanalystDownload.lock',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'elasticSearchClient' => 
  array (
    'class' => 'Elasticsearch\\Client',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'return [
    \'hosts\'=>[ELASTICSEARCH_HOST.\':\'.ELASTICSEARCH_PORT]
];',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'elasticSearchService' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Services\\ElasticSearchService',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'elasticSearchClient',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterProperties' => 
    array (
    ),
    'setterBinds' => 
    array (
      'setItemDao' => 'itemDao',
      'setPackageDao' => 'packageDao',
    ),
  ),
  'emailValidator' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\EmailValidator',
    'external' => false,
    'weak' => false,
  ),
  'errorLogLogger' => 
  array (
    'class' => 'Mouf\\Utils\\Log\\ErrorLogLogger',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'level' => 
      array (
        'value' => 4,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'exceptionRouter' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Routers\\ExceptionRouter',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'splashDefaultRouter',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'httpErrorsController',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'fetchDataService' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Services\\FetchDataService',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'classesDetector',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'colorLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'packageDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'fileCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\FileCache',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'defaultTimeToLive' => 
      array (
        'value' => 3600,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'prefix' => 
      array (
        'value' => 'SECRET',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'fineCommonTranslationService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'defaultLanguageDetection',
    ),
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'vendor/mouf/utils.i18n.fine/resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'googleAnalyticsWebLibrary' => 
  array (
    'class' => 'Mouf\\Modules\\GoogleAnalytics\\GoogleAnalyticsWebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'GOOGLE_ANALYTICS_KEY',
        'parametertype' => 'primitive',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'GOOGLE_ANALYTICS_DOMAIN_NAME',
        'parametertype' => 'primitive',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'httpErrorsController' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Controllers\\HttpErrorsController',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'template' => 'bootstrapTemplate',
      'contentBlock' => 'block.content',
    ),
    'fieldProperties' => 
    array (
      'debugMode' => 
      array (
        'value' => 'DEBUG',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'itemDao' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Dao\\ItemDao',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'mongoItemsCollection',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'elasticSearchService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'logo' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\Twig\\TwigTemplate',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'twigEnvironment',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'src/views/root/logo.twig',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'messageServiceLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'vendor/mouf/html.widgets.messageservice/messages.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
    ),
  ),
  'messageWidget' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\MessageService\\Widget\\MessageWidget',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'messageProvider' => 'userMessageService',
    ),
  ),
  'mongoClient' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => 'return new \\MongoDB\\Client(MONGODB_CONNECTIONSTRING);',
    'class' => 'MongoDB\\Client',
  ),
  'mongoItemsCollection' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => 'return $container->get(\'mongoPackanalystDb\')->selectCollection(\'items\');',
    'class' => 'MongoDB\\Collection',
  ),
  'mongoPackagesCollection' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'MongoDB\\Collection',
    'external' => false,
    'code' => 'return $container->get(\'mongoPackanalystDb\')->selectCollection(\'packages\');',
  ),
  'mongoPackanalystDb' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => 'return $container->get(\'mongoClient\')->selectDatabase(\'packanalyst\');',
    'class' => 'MongoDB\\Database',
  ),
  'moufTwigExtension' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\Twig\\MoufTwigExtension',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'return $container;',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'noCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\NoCache',
    'external' => false,
    'weak' => false,
  ),
  'notFoundRouter' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Routers\\NotFoundRouter',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'httpErrorsController',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'numericValidatorDecimals' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\NumericValidator',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'allowDecimals' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageAnalyzerController' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Controllers\\PackageAnalyzerController',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'psr.errorLogLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'bootstrapTemplate',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'block.content',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'twigEnvironment',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      4 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      5 => 
      array (
        'value' => 'packageDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageDao' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Dao\\PackageDao',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'mongoPackagesCollection',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'elasticSearchService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRenderer_mouf/html.utils.weblibrarymanager' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.utils.weblibrarymanager/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'package',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRenderer_mouf/html.widgets.menu' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.widgets.menu/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'package',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRenderer_mouf/html.widgets.messageservice' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.widgets.messageservice/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'package',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRenderer_mouf/modules.google-analytics' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/modules.google-analytics/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'package',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packagistScoreService' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Services\\PackagistScoreService',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'packageDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'colorLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packagistStatsLock' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Lock',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'packagistStats.lock',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'psr.errorLogLogger' => 
  array (
    'class' => 'Mouf\\Utils\\Log\\Psr\\ErrorLogLogger',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'warning',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'rendererCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\InMemoryCache',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'chainWith' => 'apcCacheService',
    ),
  ),
  'requiredValidator' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\RequiredValidator',
    'external' => false,
    'weak' => false,
  ),
  'rootController' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Controllers\\RootController',
    'external' => false,
    'fieldBinds' => 
    array (
    ),
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'bootstrapTemplate',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'block.content',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'elasticSearchService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'packageDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      4 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      5 => 
      array (
        'value' => 'twigEnvironment',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'rootUrlInlineWebLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\InlineWebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'rootUrlJsFile',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'rootUrlJsFile' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlFromFile',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.utils.weblibrarymanager/javascript/rootUrl.php',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'searchBlock' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Widgets\\SearchBlock',
    'external' => false,
    'weak' => false,
  ),
  'sessionManager' => 
  array (
    'class' => 'Mouf\\Utils\\Session\\SessionManager\\DefaultSessionManager',
    'external' => false,
  ),
  'splash' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Splash',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'exceptionRouter',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'splashBrowserLanguageDetection' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Language\\BrowserLanguageDetection',
    'external' => false,
    'weak' => false,
  ),
  'splashCacheApc' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\ApcCache',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'fallback' => 'splashCacheFile',
    ),
    'fieldProperties' => 
    array (
      'prefix' => 
      array (
        'value' => 'SECRET',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'splashCacheFile' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\FileCache',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'cacheDirectory' => 
      array (
        'value' => 'splashCache/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'prefix' => 
      array (
        'value' => 'SECRET',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'splashDefaultRouter' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Routers\\SplashDefaultRouter',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'notFoundRouter',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'splashCacheApc',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'splashTranslateService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'vendor/mouf/mvc.splash-common/resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'splashBrowserLanguageDetection',
    ),
  ),
  'stylesWebLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => NULL,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'src/views/css/styles.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'twigCacheFileSystem' => 
  array (
    'class' => 'Twig_Cache_Filesystem',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => '// If we are running on a Unix environment, let\'s prepend the cache with the user id of the PHP process.
// This way, we can avoid rights conflicts.
if (function_exists(\'posix_geteuid\')) {
    $posixGetuid = posix_geteuid();
} else {
    $posixGetuid = \'\';
}
return rtrim(sys_get_temp_dir(), \'/\\\\\').\'/mouftwigtemplatemain_\'.$posixGetuid.str_replace(":", "", ROOT_PATH);',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'twigDebugExtension' => 
  array (
    'class' => 'Twig_Extension_Debug',
    'external' => false,
    'weak' => false,
  ),
  'twigEnvironment' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\Twig\\MoufTwigEnvironment',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setExtensions' => 
      array (
        0 => 'moufTwigExtension',
        1 => 'twigDebugExtension',
      ),
      'setCache' => 'twigCacheFileSystem',
    ),
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'twigLoaderFileSystem',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'return array(\'debug\' => DEBUG, \'auto_reload\' => true);',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'twigLoaderFileSystem' => 
  array (
    'class' => 'Twig_Loader_Filesystem',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'return ROOT_PATH;',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'uRLValidatorFtpHttps' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\URLValidator',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'allowFtp' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'allowHttps' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'userMessageService' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\MessageService\\Service\\SessionMessageService',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'sessionManager' => 'sessionManager',
    ),
  ),
  'validatorsBrowserLanguageDetection' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Language\\BrowserLanguageDetection',
    'external' => false,
  ),
  'validatorsTranslateService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'vendor/mouf/utils.common.validators/src/resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'validatorsBrowserLanguageDetection',
    ),
  ),
));


unset($moufManager);

/**
 * This is the base class of the Manage Object User Friendly or Modular object user framework (MOUF) framework.
 * This object can be used to get the objects manage by MOUF.
 *
 */
class Mouf {
	public function getClosures() {
		return [
			'__anonymous__3f09_123574_1415963578543' => [
				'constructor' => [
					1 => function(ContainerInterface $container) {
						if (trim($_SERVER['REQUEST_URI'], '/') == trim(ROOT_URL, '/')) {
    return "#about";
} else {
    return ROOT_URL."#about";
}
					},
				],
			],
			'__anonymous__3f09_325259_1415963587939' => [
				'constructor' => [
					1 => function(ContainerInterface $container) {
						if (trim($_SERVER['REQUEST_URI'], '/') == trim(ROOT_URL, '/')) {
    return "#team";
} else {
    return ROOT_URL."#team";
}
					},
				],
			],
			'__anonymous__3f09_447968_1415963567295' => [
				'constructor' => [
					1 => function(ContainerInterface $container) {
						if (trim($_SERVER['REQUEST_URI'], '/') == trim(ROOT_URL, '/')) {
    return "#feedback";
} else {
    return ROOT_URL."#feedback";
}
					},
				],
			],
			'__anonymous__3f09_796349_1416051015274' => [
				'constructor' => [
					1 => function(ContainerInterface $container) {
						if (trim($_SERVER['REQUEST_URI'], '/') == trim(ROOT_URL, '/')) {
    return "#api";
} else {
    return ROOT_URL."#api";
}
					},
				],
			],
			'__anonymous__3f09_867472_1415899120049' => [
				'constructor' => [
					1 => function(ContainerInterface $container) {
						if (trim($_SERVER['REQUEST_URI'], '/') == trim(ROOT_URL, '/')) {
    return "#search";
} else {
    return ROOT_URL."#search";
}
					},
				],
			],
			'annotationReader' => function(ContainerInterface $container) {
				// Using composer autoloader
$loader = require ROOT_PATH . 'vendor/autoload.php';
Doctrine\Common\Annotations\AnnotationRegistry::registerLoader(array($loader, 'loadClass'));

// Creating a new AnnotationReader
$reader = new Doctrine\Common\Annotations\AnnotationReader();
return new Doctrine\Common\Annotations\CachedReader($reader, new Doctrine\Common\Cache\ArrayCache());
			},
			'colorLogger' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						return array(
    'colors' => array(
        'debug' => "\033[0;35m",
        'error' => "\033[1;31m",
        'section' => "\033[1;37m",
        'subsection' => "\033[1;33m",
        'ok' => "\033[1;32m"
    )
);
					},
				],
			],
			'defaultDoctrineCache' => function(ContainerInterface $container) {
				// If DEBUG mode is on, let's just use an ArrayCache.
if (DEBUG) {
	$driver = new \Doctrine\Common\Cache\ArrayCache();
} else {
	// If APC is available, let's use APC
	if (extension_loaded("apc")) {
		$driver = new \Doctrine\Common\Cache\ApcCache();
	} else {
		$driver = new \Doctrine\Common\Cache\FileCache(sys_get_temp_dir().'/doctrinecache');
	}
}
$driver->setNamespace(SECRET);
return $driver;

			},
			'elasticSearchClient' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						return [
    'hosts'=>[ELASTICSEARCH_HOST.':'.ELASTICSEARCH_PORT]
];
					},
				],
			],
			'mongoClient' => function(ContainerInterface $container) {
				return new \MongoDB\Client(MONGODB_CONNECTIONSTRING);
			},
			'mongoItemsCollection' => function(ContainerInterface $container) {
				return $container->get('mongoPackanalystDb')->selectCollection('items');
			},
			'mongoPackagesCollection' => function(ContainerInterface $container) {
				return $container->get('mongoPackanalystDb')->selectCollection('packages');
			},
			'mongoPackanalystDb' => function(ContainerInterface $container) {
				return $container->get('mongoClient')->selectDatabase('packanalyst');
			},
			'moufTwigExtension' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						return $container;
					},
				],
			],
			'twigCacheFileSystem' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						// If we are running on a Unix environment, let's prepend the cache with the user id of the PHP process.
// This way, we can avoid rights conflicts.
if (function_exists('posix_geteuid')) {
    $posixGetuid = posix_geteuid();
} else {
    $posixGetuid = '';
}
return rtrim(sys_get_temp_dir(), '/\\').'/mouftwigtemplatemain_'.$posixGetuid.str_replace(":", "", ROOT_PATH);
					},
				],
			],
			'twigEnvironment' => [
				'constructor' => [
					1 => function(ContainerInterface $container) {
						return array('debug' => DEBUG, 'auto_reload' => true);
					},
				],
			],
			'twigLoaderFileSystem' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						return ROOT_PATH;
					},
				],
			],
		];
	}
	/**
	 * @return Doctrine\Common\Annotations\CachedReader
	 */
	 public static function getAnnotationReader() {
	 	return MoufManager::getMoufManager()->get('annotationReader');
	 }

	/**
	 * @return Mouf\Utils\Cache\ApcCache
	 */
	 public static function getApcCacheService() {
	 	return MoufManager::getMoufManager()->get('apcCacheService');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_content() {
	 	return MoufManager::getMoufManager()->get('block.content');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_footer() {
	 	return MoufManager::getMoufManager()->get('block.footer');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_header() {
	 	return MoufManager::getMoufManager()->get('block.header');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_left() {
	 	return MoufManager::getMoufManager()->get('block.left');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_right() {
	 	return MoufManager::getMoufManager()->get('block.right');
	 }

	/**
	 * @return Mouf\Html\Template\Menus\BootstrapNavBar
	 */
	 public static function getBootstrapNavBar() {
	 	return MoufManager::getMoufManager()->get('bootstrapNavBar');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getBootstrapRenderer() {
	 	return MoufManager::getMoufManager()->get('bootstrapRenderer');
	 }

	/**
	 * @return Mouf\Html\Template\BootstrapTemplate
	 */
	 public static function getBootstrapTemplate() {
	 	return MoufManager::getMoufManager()->get('bootstrapTemplate');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getBower_typeahead_js() {
	 	return MoufManager::getMoufManager()->get('bower.typeahead.js');
	 }

	/**
	 * @return Mouf\Packanalyst\Controllers\ClassAnalyzerController
	 */
	 public static function getClassAnalyzerController() {
	 	return MoufManager::getMoufManager()->get('classAnalyzerController');
	 }

	/**
	 * @return Mouf\Packanalyst\ClassesDetector
	 */
	 public static function getClassesDetector() {
	 	return MoufManager::getMoufManager()->get('classesDetector');
	 }

	/**
	 * @return GAubry\Logger\ColoredIndentedLogger
	 */
	 public static function getColorLogger() {
	 	return MoufManager::getMoufManager()->get('colorLogger');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getCompiledAssets() {
	 	return MoufManager::getMoufManager()->get('compiledAssets');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getComponent_bootstrap() {
	 	return MoufManager::getMoufManager()->get('component.bootstrap');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getComponent_jquery() {
	 	return MoufManager::getMoufManager()->get('component.jquery');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getCustomRenderer() {
	 	return MoufManager::getMoufManager()->get('customRenderer');
	 }

	/**
	 * @return Doctrine\Common\Cache\ArrayCache
	 */
	 public static function getDefaultDoctrineCache() {
	 	return MoufManager::getMoufManager()->get('defaultDoctrineCache');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Language\BrowserLanguageDetection
	 */
	 public static function getDefaultLanguageDetection() {
	 	return MoufManager::getMoufManager()->get('defaultLanguageDetection');
	 }

	/**
	 * @return Mouf\Html\Renderer\AutoChainRenderer
	 */
	 public static function getDefaultRenderer() {
	 	return MoufManager::getMoufManager()->get('defaultRenderer');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getDefaultTranslationService() {
	 	return MoufManager::getMoufManager()->get('defaultTranslationService');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibraryManager
	 */
	 public static function getDefaultWebLibraryManager() {
	 	return MoufManager::getMoufManager()->get('defaultWebLibraryManager');
	 }

	/**
	 * @return Mouf\Utils\Common\Doctrine\Cache\DoctrineCacheAdapter
	 */
	 public static function getDoctrineMoufCache() {
	 	return MoufManager::getMoufManager()->get('doctrineMoufCache');
	 }

	/**
	 * @return Mouf\Utils\Common\Lock
	 */
	 public static function getDownloadLock() {
	 	return MoufManager::getMoufManager()->get('downloadLock');
	 }

	/**
	 * @return Elasticsearch\Client
	 */
	 public static function getElasticSearchClient() {
	 	return MoufManager::getMoufManager()->get('elasticSearchClient');
	 }

	/**
	 * @return Mouf\Packanalyst\Services\ElasticSearchService
	 */
	 public static function getElasticSearchService() {
	 	return MoufManager::getMoufManager()->get('elasticSearchService');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\EmailValidator
	 */
	 public static function getEmailValidator() {
	 	return MoufManager::getMoufManager()->get('emailValidator');
	 }

	/**
	 * @return Mouf\Utils\Log\ErrorLogLogger
	 */
	 public static function getErrorLogLogger() {
	 	return MoufManager::getMoufManager()->get('errorLogLogger');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Routers\ExceptionRouter
	 */
	 public static function getExceptionRouter() {
	 	return MoufManager::getMoufManager()->get('exceptionRouter');
	 }

	/**
	 * @return Mouf\Packanalyst\Services\FetchDataService
	 */
	 public static function getFetchDataService() {
	 	return MoufManager::getMoufManager()->get('fetchDataService');
	 }

	/**
	 * @return Mouf\Utils\Cache\FileCache
	 */
	 public static function getFileCacheService() {
	 	return MoufManager::getMoufManager()->get('fileCacheService');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getFineCommonTranslationService() {
	 	return MoufManager::getMoufManager()->get('fineCommonTranslationService');
	 }

	/**
	 * @return Mouf\Modules\GoogleAnalytics\GoogleAnalyticsWebLibrary
	 */
	 public static function getGoogleAnalyticsWebLibrary() {
	 	return MoufManager::getMoufManager()->get('googleAnalyticsWebLibrary');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Controllers\HttpErrorsController
	 */
	 public static function getHttpErrorsController() {
	 	return MoufManager::getMoufManager()->get('httpErrorsController');
	 }

	/**
	 * @return Mouf\Packanalyst\Dao\ItemDao
	 */
	 public static function getItemDao() {
	 	return MoufManager::getMoufManager()->get('itemDao');
	 }

	/**
	 * @return Mouf\Html\Renderer\Twig\TwigTemplate
	 */
	 public static function getLogo() {
	 	return MoufManager::getMoufManager()->get('logo');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getMessageServiceLibrary() {
	 	return MoufManager::getMoufManager()->get('messageServiceLibrary');
	 }

	/**
	 * @return Mouf\Html\Widgets\MessageService\Widget\MessageWidget
	 */
	 public static function getMessageWidget() {
	 	return MoufManager::getMoufManager()->get('messageWidget');
	 }

	/**
	 * @return MongoDB\Client
	 */
	 public static function getMongoClient() {
	 	return MoufManager::getMoufManager()->get('mongoClient');
	 }

	/**
	 * @return MongoDB\Collection
	 */
	 public static function getMongoItemsCollection() {
	 	return MoufManager::getMoufManager()->get('mongoItemsCollection');
	 }

	/**
	 * @return MongoDB\Collection
	 */
	 public static function getMongoPackagesCollection() {
	 	return MoufManager::getMoufManager()->get('mongoPackagesCollection');
	 }

	/**
	 * @return MongoDB\Database
	 */
	 public static function getMongoPackanalystDb() {
	 	return MoufManager::getMoufManager()->get('mongoPackanalystDb');
	 }

	/**
	 * @return Mouf\Html\Renderer\Twig\MoufTwigExtension
	 */
	 public static function getMoufTwigExtension() {
	 	return MoufManager::getMoufManager()->get('moufTwigExtension');
	 }

	/**
	 * @return Mouf\Utils\Cache\NoCache
	 */
	 public static function getNoCacheService() {
	 	return MoufManager::getMoufManager()->get('noCacheService');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Routers\NotFoundRouter
	 */
	 public static function getNotFoundRouter() {
	 	return MoufManager::getMoufManager()->get('notFoundRouter');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\NumericValidator
	 */
	 public static function getNumericValidatorDecimals() {
	 	return MoufManager::getMoufManager()->get('numericValidatorDecimals');
	 }

	/**
	 * @return Mouf\Packanalyst\Controllers\PackageAnalyzerController
	 */
	 public static function getPackageAnalyzerController() {
	 	return MoufManager::getMoufManager()->get('packageAnalyzerController');
	 }

	/**
	 * @return Mouf\Packanalyst\Dao\PackageDao
	 */
	 public static function getPackageDao() {
	 	return MoufManager::getMoufManager()->get('packageDao');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getPackageRenderer_moufhtml_utils_weblibrarymanager() {
	 	return MoufManager::getMoufManager()->get('packageRenderer_mouf/html.utils.weblibrarymanager');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getPackageRenderer_moufhtml_widgets_menu() {
	 	return MoufManager::getMoufManager()->get('packageRenderer_mouf/html.widgets.menu');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getPackageRenderer_moufhtml_widgets_messageservice() {
	 	return MoufManager::getMoufManager()->get('packageRenderer_mouf/html.widgets.messageservice');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getPackageRenderer_moufmodules_googleanalytics() {
	 	return MoufManager::getMoufManager()->get('packageRenderer_mouf/modules.google-analytics');
	 }

	/**
	 * @return Mouf\Packanalyst\Services\PackagistScoreService
	 */
	 public static function getPackagistScoreService() {
	 	return MoufManager::getMoufManager()->get('packagistScoreService');
	 }

	/**
	 * @return Mouf\Utils\Common\Lock
	 */
	 public static function getPackagistStatsLock() {
	 	return MoufManager::getMoufManager()->get('packagistStatsLock');
	 }

	/**
	 * @return Mouf\Utils\Log\Psr\ErrorLogLogger
	 */
	 public static function getPsr_errorLogLogger() {
	 	return MoufManager::getMoufManager()->get('psr.errorLogLogger');
	 }

	/**
	 * @return Mouf\Utils\Cache\InMemoryCache
	 */
	 public static function getRendererCacheService() {
	 	return MoufManager::getMoufManager()->get('rendererCacheService');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\RequiredValidator
	 */
	 public static function getRequiredValidator() {
	 	return MoufManager::getMoufManager()->get('requiredValidator');
	 }

	/**
	 * @return Mouf\Packanalyst\Controllers\RootController
	 */
	 public static function getRootController() {
	 	return MoufManager::getMoufManager()->get('rootController');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\InlineWebLibrary
	 */
	 public static function getRootUrlInlineWebLibrary() {
	 	return MoufManager::getMoufManager()->get('rootUrlInlineWebLibrary');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlFromFile
	 */
	 public static function getRootUrlJsFile() {
	 	return MoufManager::getMoufManager()->get('rootUrlJsFile');
	 }

	/**
	 * @return Mouf\Packanalyst\Widgets\SearchBlock
	 */
	 public static function getSearchBlock() {
	 	return MoufManager::getMoufManager()->get('searchBlock');
	 }

	/**
	 * @return Mouf\Utils\Session\SessionManager\DefaultSessionManager
	 */
	 public static function getSessionManager() {
	 	return MoufManager::getMoufManager()->get('sessionManager');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Splash
	 */
	 public static function getSplash() {
	 	return MoufManager::getMoufManager()->get('splash');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Language\BrowserLanguageDetection
	 */
	 public static function getSplashBrowserLanguageDetection() {
	 	return MoufManager::getMoufManager()->get('splashBrowserLanguageDetection');
	 }

	/**
	 * @return Mouf\Utils\Cache\ApcCache
	 */
	 public static function getSplashCacheApc() {
	 	return MoufManager::getMoufManager()->get('splashCacheApc');
	 }

	/**
	 * @return Mouf\Utils\Cache\FileCache
	 */
	 public static function getSplashCacheFile() {
	 	return MoufManager::getMoufManager()->get('splashCacheFile');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Routers\SplashDefaultRouter
	 */
	 public static function getSplashDefaultRouter() {
	 	return MoufManager::getMoufManager()->get('splashDefaultRouter');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getSplashTranslateService() {
	 	return MoufManager::getMoufManager()->get('splashTranslateService');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getStylesWebLibrary() {
	 	return MoufManager::getMoufManager()->get('stylesWebLibrary');
	 }

	/**
	 * @return Twig_Cache_Filesystem
	 */
	 public static function getTwigCacheFileSystem() {
	 	return MoufManager::getMoufManager()->get('twigCacheFileSystem');
	 }

	/**
	 * @return Twig_Extension_Debug
	 */
	 public static function getTwigDebugExtension() {
	 	return MoufManager::getMoufManager()->get('twigDebugExtension');
	 }

	/**
	 * @return Mouf\Html\Renderer\Twig\MoufTwigEnvironment
	 */
	 public static function getTwigEnvironment() {
	 	return MoufManager::getMoufManager()->get('twigEnvironment');
	 }

	/**
	 * @return Twig_Loader_Filesystem
	 */
	 public static function getTwigLoaderFileSystem() {
	 	return MoufManager::getMoufManager()->get('twigLoaderFileSystem');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\URLValidator
	 */
	 public static function getURLValidatorFtpHttps() {
	 	return MoufManager::getMoufManager()->get('uRLValidatorFtpHttps');
	 }

	/**
	 * @return Mouf\Html\Widgets\MessageService\Service\SessionMessageService
	 */
	 public static function getUserMessageService() {
	 	return MoufManager::getMoufManager()->get('userMessageService');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Language\BrowserLanguageDetection
	 */
	 public static function getValidatorsBrowserLanguageDetection() {
	 	return MoufManager::getMoufManager()->get('validatorsBrowserLanguageDetection');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getValidatorsTranslateService() {
	 	return MoufManager::getMoufManager()->get('validatorsTranslateService');
	 }

}
